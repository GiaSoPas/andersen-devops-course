#!/bin/bash

# Output to stderr

# $@ - all parameters
# cat <<< <something> - redirect to cat
# 2>&1
err() { cat <<< "$@" 2>&1; }

# Check environment
if [ -z "$(which netstat)" ]; then
  err "Please install net-tools package."
  exit 1
fi

if [ -z "$(which ss)" ]; then
  err "Please install iproute2 package."
  exit 1
fi

if [ -z "$(which whois)" ]; then
  err "Please install whois package."
  exit 1
fi


#Warning for non-root
if [ "$EUID" -ne 0 ]; then
  echo "Run as root to see more details"
fi


#Read parameters
read -p "Enter tool (netstat or ss): " TOOL
if [ -z "$TOOL" ]; then
    err "Enter tool!"
    exit 1
fi
read -p "Enter process name/PID: " PROCESS
if [ -z "$PROCESS" ]; then
    err "Enter process!"
    exit 1
fi

read -p "Enter connection state: " STATE
if [ ! -z "$STATE" ]; then
  STATE=$(echo "$STATE" | tr a-z A-Z)
else
  err "Enter state!"
  exit 1
fi

read -p "Enter number of lines: " NUMLINES
re='^[0-9]+$'
if [[  ! "$NUMLINES" =~ $re ]]; then
  err "number of lines should be natural number"
  exit 1
fi

read -p "Enter field: " FIELD
if [ -z "$FIELD" ]; then
    err "Enter field!"
    exit 1
fi







# Fetch data
if [ $TOOL = "netstat" ]; then
  REMOTES=$(netstat -tunapl | awk '/'${PROCESS}'/ {print $5, $6, $7}')
  REMOTES=$(echo "$REMOTES" | grep "$STATE" | sort | uniq -c | sort)
  REMOTES=$(echo "$REMOTES" | tail -n "$NUMLINES" | column -t)
fi

if [ $TOOL = "ss" ]; then
  REMOTES=$(ss -tunap | awk '/'${PROCESS}'/ {print $6, $2, $7}')
  REMOTES=$(echo "$REMOTES" | grep "$STATE" | sort | uniq -c | sort)
  REMOTES=$(echo "$REMOTES" | tail -n "$NUMLINES" | column -t)
fi


if [ -z  "$REMOTES" ];then
  exit;
fi

echo "CONNECTIONS:"
echo "$REMOTES"

IPS=$(echo "$REMOTES" | cut -d: -f1 | sort | uniq -c | sort)
IPS=$(echo "$IPS" | tail -n "$NUMLINES" | grep -oP '(\d+\.){3}\d+')

echo $'\nWHOIS:'
for ip in $IPS
do
  if [ "$FIELD"!="Organization" ]
  then
    echo $ip $'\t' $(whois $ip | grep -i "^$FIELD" | uniq | tr -s ' ' | awk -F': ' '{print $2}')
  else
    echo $ip $'\t' $(whois $ip | awk -F':' '/^OrgName|^org-name|^role|^person/ {print $2}' | tr -s ' ' | uniq)
  fi
done
