---
  - name         : Deploy flask app to vm
    hosts        : vmflask
    become       : yes
    vars:
      username: andersen
      #path to app
      app_path   : /home/andersen/

      #path to service
      service_path  : /etc/systemd/system/

      #necessary packages to install
      nes_env:
        - python3
        - python3-pip
        - python-setuptools
        - ufw

      #app file
      app_file: flask_app.py
      #service file
      service_file: flask_app.service

    tasks:
      - name: Update the system and install necessary packages via loop
        apt:
          name          : "{{ nes_env }}"
          force         : yes
          update_cache  : yes
          autoremove    : yes
          autoclean     : yes

      - name: Creating app dir
        file:
          path : "{{ app_path }}"
          state: directory
          mode : '0775'


      - name: copy systemd files
        copy:
          src : "{{ service_file }}"
          dest: "{{ service_path }}"


      - name: installing flask
        pip:
          executable: pip3
          name: flask
          state: latest

      - name: pip3 command
        command: pip3 install --upgrade pip

      - name: installing emoji
        pip:
          executable: pip3
          name: emoji
          state: latest

      - name: copy necessary files
        copy:
          src : "{{ app_file }}"
          dest: "{{ app_path }}"
          mode: '0775'

      - name: enable ufw
        ufw:
          state: enabled
          policy: allow


      - name: rules for ufw
        ufw:
          rule: allow
          name: '{{ item }}'
        loop:
          - "WWW Full"
          - "ssh"
        notify:
          - restart ufw

      - name: copy sshd file
        copy:
         src  : sshd_config
         dest : /etc/ssh/
         force: yes


      - name: restart sshd
        service:
          name: sshd
          state: restarted

      - name: enable service
        service:
          name   : flask_app.service
          enabled: yes

      - name: start service
        service:
          name : flask_app.service
          state: started

    handlers:
      - name: restart ufw
        service: name=ufw state=restarted
